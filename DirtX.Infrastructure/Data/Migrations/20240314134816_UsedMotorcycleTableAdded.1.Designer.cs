// <auto-generated />
using System;
using DirtX.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DirtX.Web.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240314134816_UsedMotorcycleTableAdded.1")]
    partial class UsedMotorcycleTableAdded1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.GearProperty", b =>
                {
                    b.Property<int>("GearId")
                        .HasColumnType("int");

                    b.Property<int>("SpecificationId")
                        .HasColumnType("int");

                    b.HasKey("GearId", "SpecificationId");

                    b.HasIndex("SpecificationId");

                    b.ToTable("GearsProperties");

                    b.HasData(
                        new
                        {
                            GearId = 1,
                            SpecificationId = 10
                        },
                        new
                        {
                            GearId = 2,
                            SpecificationId = 8
                        },
                        new
                        {
                            GearId = 5,
                            SpecificationId = 1
                        },
                        new
                        {
                            GearId = 5,
                            SpecificationId = 9
                        },
                        new
                        {
                            GearId = 6,
                            SpecificationId = 1
                        },
                        new
                        {
                            GearId = 6,
                            SpecificationId = 5
                        },
                        new
                        {
                            GearId = 7,
                            SpecificationId = 8
                        },
                        new
                        {
                            GearId = 8,
                            SpecificationId = 7
                        },
                        new
                        {
                            GearId = 10,
                            SpecificationId = 2
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.MotorcyclePart", b =>
                {
                    b.Property<int>("MotorcycleId")
                        .HasColumnType("int");

                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.HasKey("MotorcycleId", "PartId");

                    b.HasIndex("PartId");

                    b.ToTable("MotorcyclesParts");

                    b.HasData(
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 1
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 1
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 1
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 1
                        },
                        new
                        {
                            MotorcycleId = 10,
                            PartId = 1
                        },
                        new
                        {
                            MotorcycleId = 12,
                            PartId = 1
                        },
                        new
                        {
                            MotorcycleId = 1,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 2,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 6,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 8,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 9,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 10,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 11,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 12,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 13,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 14,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 15,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 18,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 19,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 20,
                            PartId = 2
                        },
                        new
                        {
                            MotorcycleId = 13,
                            PartId = 3
                        },
                        new
                        {
                            MotorcycleId = 14,
                            PartId = 3
                        },
                        new
                        {
                            MotorcycleId = 15,
                            PartId = 3
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 3
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 3
                        },
                        new
                        {
                            MotorcycleId = 18,
                            PartId = 3
                        },
                        new
                        {
                            MotorcycleId = 19,
                            PartId = 3
                        },
                        new
                        {
                            MotorcycleId = 20,
                            PartId = 3
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 4
                        },
                        new
                        {
                            MotorcycleId = 8,
                            PartId = 4
                        },
                        new
                        {
                            MotorcycleId = 9,
                            PartId = 4
                        },
                        new
                        {
                            MotorcycleId = 13,
                            PartId = 5
                        },
                        new
                        {
                            MotorcycleId = 14,
                            PartId = 5
                        },
                        new
                        {
                            MotorcycleId = 15,
                            PartId = 5
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 5
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 5
                        },
                        new
                        {
                            MotorcycleId = 18,
                            PartId = 5
                        },
                        new
                        {
                            MotorcycleId = 1,
                            PartId = 6
                        },
                        new
                        {
                            MotorcycleId = 2,
                            PartId = 6
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 6
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 7
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 7
                        },
                        new
                        {
                            MotorcycleId = 19,
                            PartId = 8
                        },
                        new
                        {
                            MotorcycleId = 20,
                            PartId = 8
                        },
                        new
                        {
                            MotorcycleId = 1,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 2,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 6,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 8,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 9,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 10,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 11,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 12,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 13,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 14,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 15,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 18,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 19,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 20,
                            PartId = 9
                        },
                        new
                        {
                            MotorcycleId = 1,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 2,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 6,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 8,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 9,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 10,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 11,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 12,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 13,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 14,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 15,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 18,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 19,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 20,
                            PartId = 10
                        },
                        new
                        {
                            MotorcycleId = 10,
                            PartId = 11
                        },
                        new
                        {
                            MotorcycleId = 11,
                            PartId = 11
                        },
                        new
                        {
                            MotorcycleId = 12,
                            PartId = 11
                        },
                        new
                        {
                            MotorcycleId = 1,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 2,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 6,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 8,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 9,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 10,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 11,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 12,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 13,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 14,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 15,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 18,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 19,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 20,
                            PartId = 12
                        },
                        new
                        {
                            MotorcycleId = 1,
                            PartId = 13
                        },
                        new
                        {
                            MotorcycleId = 2,
                            PartId = 13
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 13
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 13
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 13
                        },
                        new
                        {
                            MotorcycleId = 6,
                            PartId = 13
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 13
                        },
                        new
                        {
                            MotorcycleId = 8,
                            PartId = 13
                        },
                        new
                        {
                            MotorcycleId = 9,
                            PartId = 13
                        },
                        new
                        {
                            MotorcycleId = 10,
                            PartId = 13
                        },
                        new
                        {
                            MotorcycleId = 11,
                            PartId = 13
                        },
                        new
                        {
                            MotorcycleId = 12,
                            PartId = 13
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 14
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 14
                        },
                        new
                        {
                            MotorcycleId = 18,
                            PartId = 14
                        },
                        new
                        {
                            MotorcycleId = 1,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 2,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 6,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 8,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 9,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 10,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 11,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 12,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 13,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 14,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 15,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 18,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 19,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 20,
                            PartId = 15
                        },
                        new
                        {
                            MotorcycleId = 1,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 2,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 6,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 8,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 9,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 10,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 11,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 12,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 13,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 14,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 15,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 18,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 19,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 20,
                            PartId = 16
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 17
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 17
                        },
                        new
                        {
                            MotorcycleId = 6,
                            PartId = 17
                        },
                        new
                        {
                            MotorcycleId = 1,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 2,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 6,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 8,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 9,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 10,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 11,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 12,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 13,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 14,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 15,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 18,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 19,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 20,
                            PartId = 18
                        },
                        new
                        {
                            MotorcycleId = 1,
                            PartId = 19
                        },
                        new
                        {
                            MotorcycleId = 2,
                            PartId = 19
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 19
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 19
                        },
                        new
                        {
                            MotorcycleId = 8,
                            PartId = 19
                        },
                        new
                        {
                            MotorcycleId = 9,
                            PartId = 19
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 20
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 21
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 21
                        },
                        new
                        {
                            MotorcycleId = 6,
                            PartId = 21
                        },
                        new
                        {
                            MotorcycleId = 1,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 2,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 6,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 8,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 9,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 10,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 11,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 12,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 13,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 14,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 15,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 18,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 19,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 20,
                            PartId = 22
                        },
                        new
                        {
                            MotorcycleId = 1,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 2,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 6,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 8,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 9,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 10,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 11,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 12,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 13,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 14,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 15,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 18,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 19,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 20,
                            PartId = 23
                        },
                        new
                        {
                            MotorcycleId = 1,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 2,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 6,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 8,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 9,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 10,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 11,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 12,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 13,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 14,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 15,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 18,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 19,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 20,
                            PartId = 24
                        },
                        new
                        {
                            MotorcycleId = 1,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 2,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 3,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 4,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 5,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 6,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 7,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 8,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 9,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 10,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 11,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 12,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 13,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 14,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 15,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 18,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 19,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 20,
                            PartId = 25
                        },
                        new
                        {
                            MotorcycleId = 16,
                            PartId = 26
                        },
                        new
                        {
                            MotorcycleId = 17,
                            PartId = 26
                        },
                        new
                        {
                            MotorcycleId = 13,
                            PartId = 27
                        },
                        new
                        {
                            MotorcycleId = 14,
                            PartId = 27
                        },
                        new
                        {
                            MotorcycleId = 15,
                            PartId = 27
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Motorcycles.UsedMotorcycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplacementId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("MakeId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Province")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisplacementId");

                    b.HasIndex("MakeId");

                    b.HasIndex("ModelId");

                    b.HasIndex("YearId");

                    b.ToTable("UsedMotorcycles");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Displacement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Displacements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Volume = 250
                        },
                        new
                        {
                            Id = 2,
                            Volume = 350
                        },
                        new
                        {
                            Id = 3,
                            Volume = 450
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Make", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Makes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Yamaha"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Honda"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Suzuki"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Kawasaki"
                        },
                        new
                        {
                            Id = 5,
                            Title = "KTM"
                        },
                        new
                        {
                            Id = 6,
                            Title = "Husqvarna"
                        },
                        new
                        {
                            Id = 7,
                            Title = "GASGAS"
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "YZ-F"
                        },
                        new
                        {
                            Id = 2,
                            Title = "CRF"
                        },
                        new
                        {
                            Id = 3,
                            Title = "RM-Z"
                        },
                        new
                        {
                            Id = 4,
                            Title = "KX-F"
                        },
                        new
                        {
                            Id = 5,
                            Title = "SX-F"
                        },
                        new
                        {
                            Id = 6,
                            Title = "FC"
                        },
                        new
                        {
                            Id = 7,
                            Title = "MC-F"
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Motorcycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DisplacementId")
                        .HasColumnType("int");

                    b.Property<int>("MakeId")
                        .HasColumnType("int");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DisplacementId");

                    b.HasIndex("ModelId");

                    b.HasIndex("YearId");

                    b.HasIndex("MakeId", "ModelId", "YearId", "DisplacementId");

                    b.ToTable("Motorcycles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplacementId = 1,
                            MakeId = 1,
                            ModelId = 1,
                            YearId = 1
                        },
                        new
                        {
                            Id = 2,
                            DisplacementId = 1,
                            MakeId = 1,
                            ModelId = 1,
                            YearId = 2
                        },
                        new
                        {
                            Id = 3,
                            DisplacementId = 3,
                            MakeId = 1,
                            ModelId = 1,
                            YearId = 3
                        },
                        new
                        {
                            Id = 4,
                            DisplacementId = 3,
                            MakeId = 2,
                            ModelId = 2,
                            YearId = 4
                        },
                        new
                        {
                            Id = 5,
                            DisplacementId = 3,
                            MakeId = 2,
                            ModelId = 2,
                            YearId = 5
                        },
                        new
                        {
                            Id = 6,
                            DisplacementId = 1,
                            MakeId = 2,
                            ModelId = 2,
                            YearId = 6
                        },
                        new
                        {
                            Id = 7,
                            DisplacementId = 3,
                            MakeId = 3,
                            ModelId = 3,
                            YearId = 7
                        },
                        new
                        {
                            Id = 8,
                            DisplacementId = 1,
                            MakeId = 3,
                            ModelId = 3,
                            YearId = 8
                        },
                        new
                        {
                            Id = 9,
                            DisplacementId = 1,
                            MakeId = 3,
                            ModelId = 3,
                            YearId = 9
                        },
                        new
                        {
                            Id = 10,
                            DisplacementId = 3,
                            MakeId = 4,
                            ModelId = 4,
                            YearId = 10
                        },
                        new
                        {
                            Id = 11,
                            DisplacementId = 1,
                            MakeId = 4,
                            ModelId = 4,
                            YearId = 11
                        },
                        new
                        {
                            Id = 12,
                            DisplacementId = 3,
                            MakeId = 4,
                            ModelId = 4,
                            YearId = 12
                        },
                        new
                        {
                            Id = 13,
                            DisplacementId = 1,
                            MakeId = 5,
                            ModelId = 5,
                            YearId = 13
                        },
                        new
                        {
                            Id = 14,
                            DisplacementId = 2,
                            MakeId = 5,
                            ModelId = 5,
                            YearId = 14
                        },
                        new
                        {
                            Id = 15,
                            DisplacementId = 3,
                            MakeId = 5,
                            ModelId = 5,
                            YearId = 15
                        },
                        new
                        {
                            Id = 16,
                            DisplacementId = 1,
                            MakeId = 6,
                            ModelId = 6,
                            YearId = 16
                        },
                        new
                        {
                            Id = 17,
                            DisplacementId = 1,
                            MakeId = 6,
                            ModelId = 6,
                            YearId = 17
                        },
                        new
                        {
                            Id = 18,
                            DisplacementId = 3,
                            MakeId = 6,
                            ModelId = 6,
                            YearId = 18
                        },
                        new
                        {
                            Id = 19,
                            DisplacementId = 1,
                            MakeId = 7,
                            ModelId = 7,
                            YearId = 19
                        },
                        new
                        {
                            Id = 20,
                            DisplacementId = 3,
                            MakeId = 7,
                            ModelId = 7,
                            YearId = 20
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Year", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ManufactureYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Years");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ManufactureYear = 2005
                        },
                        new
                        {
                            Id = 2,
                            ManufactureYear = 2006
                        },
                        new
                        {
                            Id = 3,
                            ManufactureYear = 2007
                        },
                        new
                        {
                            Id = 4,
                            ManufactureYear = 2008
                        },
                        new
                        {
                            Id = 5,
                            ManufactureYear = 2009
                        },
                        new
                        {
                            Id = 6,
                            ManufactureYear = 2010
                        },
                        new
                        {
                            Id = 7,
                            ManufactureYear = 2011
                        },
                        new
                        {
                            Id = 8,
                            ManufactureYear = 2012
                        },
                        new
                        {
                            Id = 9,
                            ManufactureYear = 2013
                        },
                        new
                        {
                            Id = 10,
                            ManufactureYear = 2014
                        },
                        new
                        {
                            Id = 11,
                            ManufactureYear = 2015
                        },
                        new
                        {
                            Id = 12,
                            ManufactureYear = 2016
                        },
                        new
                        {
                            Id = 13,
                            ManufactureYear = 2017
                        },
                        new
                        {
                            Id = 14,
                            ManufactureYear = 2018
                        },
                        new
                        {
                            Id = 15,
                            ManufactureYear = 2019
                        },
                        new
                        {
                            Id = 16,
                            ManufactureYear = 2020
                        },
                        new
                        {
                            Id = 17,
                            ManufactureYear = 2021
                        },
                        new
                        {
                            Id = 18,
                            ManufactureYear = 2022
                        },
                        new
                        {
                            Id = 19,
                            ManufactureYear = 2023
                        },
                        new
                        {
                            Id = 20,
                            ManufactureYear = 2024
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.OilProperty", b =>
                {
                    b.Property<int>("OilId")
                        .HasColumnType("int");

                    b.Property<int>("SpecificationId")
                        .HasColumnType("int");

                    b.HasKey("OilId", "SpecificationId");

                    b.HasIndex("SpecificationId");

                    b.ToTable("OilsProperties");

                    b.HasData(
                        new
                        {
                            OilId = 1,
                            SpecificationId = 4
                        },
                        new
                        {
                            OilId = 2,
                            SpecificationId = 3
                        },
                        new
                        {
                            OilId = 2,
                            SpecificationId = 6
                        },
                        new
                        {
                            OilId = 3,
                            SpecificationId = 2
                        },
                        new
                        {
                            OilId = 3,
                            SpecificationId = 6
                        },
                        new
                        {
                            OilId = 4,
                            SpecificationId = 1
                        },
                        new
                        {
                            OilId = 5,
                            SpecificationId = 1
                        },
                        new
                        {
                            OilId = 6,
                            SpecificationId = 2
                        },
                        new
                        {
                            OilId = 6,
                            SpecificationId = 5
                        },
                        new
                        {
                            OilId = 7,
                            SpecificationId = 5
                        },
                        new
                        {
                            OilId = 8,
                            SpecificationId = 2
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.PartProperty", b =>
                {
                    b.Property<int>("PartId")
                        .HasColumnType("int");

                    b.Property<int>("SpecificationId")
                        .HasColumnType("int");

                    b.HasKey("PartId", "SpecificationId");

                    b.HasIndex("SpecificationId");

                    b.ToTable("PartsProperties");

                    b.HasData(
                        new
                        {
                            PartId = 1,
                            SpecificationId = 1
                        },
                        new
                        {
                            PartId = 1,
                            SpecificationId = 8
                        },
                        new
                        {
                            PartId = 1,
                            SpecificationId = 16
                        },
                        new
                        {
                            PartId = 2,
                            SpecificationId = 1
                        },
                        new
                        {
                            PartId = 2,
                            SpecificationId = 7
                        },
                        new
                        {
                            PartId = 2,
                            SpecificationId = 21
                        },
                        new
                        {
                            PartId = 3,
                            SpecificationId = 2
                        },
                        new
                        {
                            PartId = 3,
                            SpecificationId = 14
                        },
                        new
                        {
                            PartId = 5,
                            SpecificationId = 6
                        },
                        new
                        {
                            PartId = 5,
                            SpecificationId = 15
                        },
                        new
                        {
                            PartId = 7,
                            SpecificationId = 2
                        },
                        new
                        {
                            PartId = 7,
                            SpecificationId = 8
                        },
                        new
                        {
                            PartId = 9,
                            SpecificationId = 3
                        },
                        new
                        {
                            PartId = 10,
                            SpecificationId = 9
                        },
                        new
                        {
                            PartId = 11,
                            SpecificationId = 15
                        },
                        new
                        {
                            PartId = 13,
                            SpecificationId = 4
                        },
                        new
                        {
                            PartId = 13,
                            SpecificationId = 6
                        },
                        new
                        {
                            PartId = 14,
                            SpecificationId = 1
                        },
                        new
                        {
                            PartId = 14,
                            SpecificationId = 14
                        },
                        new
                        {
                            PartId = 15,
                            SpecificationId = 26
                        },
                        new
                        {
                            PartId = 16,
                            SpecificationId = 25
                        },
                        new
                        {
                            PartId = 17,
                            SpecificationId = 11
                        },
                        new
                        {
                            PartId = 17,
                            SpecificationId = 24
                        },
                        new
                        {
                            PartId = 18,
                            SpecificationId = 1
                        },
                        new
                        {
                            PartId = 18,
                            SpecificationId = 23
                        },
                        new
                        {
                            PartId = 19,
                            SpecificationId = 27
                        },
                        new
                        {
                            PartId = 20,
                            SpecificationId = 10
                        },
                        new
                        {
                            PartId = 20,
                            SpecificationId = 23
                        },
                        new
                        {
                            PartId = 22,
                            SpecificationId = 6
                        },
                        new
                        {
                            PartId = 22,
                            SpecificationId = 14
                        },
                        new
                        {
                            PartId = 23,
                            SpecificationId = 6
                        },
                        new
                        {
                            PartId = 23,
                            SpecificationId = 14
                        },
                        new
                        {
                            PartId = 24,
                            SpecificationId = 1
                        },
                        new
                        {
                            PartId = 24,
                            SpecificationId = 15
                        },
                        new
                        {
                            PartId = 25,
                            SpecificationId = 1
                        },
                        new
                        {
                            PartId = 25,
                            SpecificationId = 13
                        },
                        new
                        {
                            PartId = 27,
                            SpecificationId = 4
                        },
                        new
                        {
                            PartId = 27,
                            SpecificationId = 6
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Gear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Gears");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Description = "Alpinestars' premium class lightweight motorcycle helmet for maximum protection.",
                            ImageUrl = "https://i.ibb.co/rs2c1Pd/Gear-SM5-Helmet.jpg",
                            IsAvailable = true,
                            Price = 899.99m,
                            Size = 1,
                            StockQuantity = 2,
                            Title = "SM5",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 13,
                            Description = "High-quality full-face racing helmet with aerodynamic design.",
                            ImageUrl = "https://i.ibb.co/YkHnz4F/Gear-3-Series-Oneal.jpg",
                            IsAvailable = true,
                            Price = 279.99m,
                            Size = 0,
                            StockQuantity = 7,
                            Title = "3-Series",
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 1,
                            Description = "Durable protective vest for safe riding.",
                            ImageUrl = "https://i.ibb.co/RhPrZB3/Gear-Bionic-Action.jpg",
                            IsAvailable = true,
                            Price = 319.99m,
                            Size = 2,
                            StockQuantity = 4,
                            Title = "Bionic Action V2",
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 15,
                            Description = "Knee protection that allows for some movement while protecting the knee cap and shin.",
                            ImageUrl = "https://i.ibb.co/JrJSf2y/Gear-Asterix-Knee.jpg",
                            IsAvailable = true,
                            Price = 179.99m,
                            Size = 1,
                            StockQuantity = 10,
                            Title = "AsteriX Knee Braces",
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 13,
                            Description = "Limited anniversary edition jersey.",
                            ImageUrl = "https://i.ibb.co/bRsz5gz/Gear-Jersey-50th.jpg",
                            IsAvailable = true,
                            Price = 79.99m,
                            Size = 2,
                            StockQuantity = 3,
                            Title = "50th Anniversary Jersey",
                            Type = 2
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 15,
                            Description = "A complete outfit of THOR's middle-class 'Prime Ace' line.",
                            ImageUrl = "https://i.ibb.co/hcZKcsB/Gear-Thor-Outfit.jpg",
                            IsAvailable = true,
                            Price = 259.99m,
                            Size = 1,
                            StockQuantity = 5,
                            Title = "Prime Ace Complete Outfit",
                            Type = 2
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 1,
                            Description = "The most advanced riding boots on the market.",
                            ImageUrl = "https://i.ibb.co/pzGDVTv/Gear-Tech10-Boots.jpg",
                            IsAvailable = true,
                            Price = 1099.99m,
                            Size = 1,
                            StockQuantity = 2,
                            Title = "Tech10",
                            Type = 3
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 13,
                            Description = "Motocross/Enduro boots with waterproof lining and reinforced toe.",
                            ImageUrl = "https://i.ibb.co/34RRszr/Gear-Blitz-Thor.jpg",
                            IsAvailable = true,
                            Price = 559.99m,
                            Size = 2,
                            StockQuantity = 6,
                            Title = "Blitz XR",
                            Type = 3
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 13,
                            Description = "Motocross goggles with flippers.",
                            ImageUrl = "https://i.ibb.co/sHzPG34/Gear-B20-Goggles.jpg",
                            IsAvailable = true,
                            Price = 129.99m,
                            Size = 1,
                            StockQuantity = 6,
                            Title = "B20 Goggles",
                            Type = 4
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 13,
                            Description = "Universal offroad gloves.",
                            ImageUrl = "https://i.ibb.co/4Rf2r40/Gear-Element-Gloves.jpg",
                            IsAvailable = true,
                            Price = 39.99m,
                            Size = 3,
                            StockQuantity = 11,
                            Title = "Element Gloves",
                            Type = 4
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Oil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<double>("PackageSize")
                        .HasColumnType("float");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Oils");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 9,
                            Description = "Premium 2-stroke oil for motorcycle engines.",
                            ImageUrl = "https://i.ibb.co/Cm7S8dG/Oil-Cross-Power-2-T.jpg",
                            IsAvailable = true,
                            PackageSize = 1.0,
                            Price = 28.99m,
                            StockQuantity = 30,
                            Title = "2T Cross Power",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 10,
                            Description = "Ester Core Premium 4-stroke oil for motorcycle engines.",
                            ImageUrl = "https://i.ibb.co/9Nyc55B/Oil-Motul-300-V-1-L.jpg",
                            IsAvailable = true,
                            PackageSize = 1.0,
                            Price = 34.99m,
                            StockQuantity = 12,
                            Title = "300V 15W60 1L",
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 10,
                            Description = "Ester Core Premium 4-stroke oil for motorcycle engines.",
                            ImageUrl = "https://i.ibb.co/3ywBxpQ/Oil-Motul-300-V-4-L.jpg",
                            IsAvailable = true,
                            PackageSize = 4.0,
                            Price = 114.99m,
                            StockQuantity = 3,
                            Title = "300V 10W40 4L",
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 2,
                            Description = "Lightweight fork oil for smoother suspension stroke.",
                            ImageUrl = "https://i.ibb.co/W52svBD/Oil-Bel-Ray-Fork-5-W.jpg",
                            IsAvailable = true,
                            PackageSize = 0.5,
                            Price = 27.00m,
                            StockQuantity = 8,
                            Title = "Fork Oil 5W",
                            Type = 3
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 9,
                            Description = "Performance Line Oils Series is used by MXGP Factory teams.",
                            ImageUrl = "https://i.ibb.co/f1fW4j5/Oil-Motorex-Shock-Oil.jpg",
                            IsAvailable = true,
                            PackageSize = 0.75,
                            Price = 29.99m,
                            StockQuantity = 8,
                            Title = "Performance Line: Shock Oil",
                            Type = 3
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 19,
                            Description = "The baseline 4-stroke engine oil for motorcycles.",
                            ImageUrl = "https://i.ibb.co/2dRRzHy/Oil-Yamalube-10w40.jpg",
                            IsAvailable = true,
                            PackageSize = 1.5,
                            Price = 26.29m,
                            StockQuantity = 14,
                            Title = "YAMALUBE 10W40",
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 10,
                            Description = "The most efficient coolant on the market.",
                            ImageUrl = "https://i.ibb.co/9rgYKcv/Oil-Motul-Antifreeze.jpg",
                            IsAvailable = true,
                            PackageSize = 1.0,
                            Price = 26.29m,
                            StockQuantity = 14,
                            Title = "AutoCool -35°C 1L",
                            Type = 4
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 10,
                            Description = "More throttle, less grinding gears.",
                            ImageUrl = "https://i.ibb.co/zntBCFg/Oil-Transmission-Motul.jpg",
                            IsAvailable = true,
                            PackageSize = 1.0,
                            Price = 28.29m,
                            StockQuantity = 4,
                            Title = "TransOil Expert 10W40",
                            Type = 2
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Part", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Parts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 17,
                            Description = "High-quality forged piston for 4-Stroke motorcycle engines. Rings and pin are included in the set.",
                            ImageUrl = "https://i.ibb.co/jTnS3W0/Part-High-Comp-Piston.jpg",
                            IsAvailable = true,
                            Price = 455.00m,
                            StockQuantity = 11,
                            Title = "High-Compression Forged Piston",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 18,
                            Description = "High-performance cast piston. Piston rings are not included.",
                            ImageUrl = "https://i.ibb.co/m6fQKSx/Part-Forged-Piston.jpg",
                            IsAvailable = true,
                            Price = 325.00m,
                            StockQuantity = 6,
                            Title = "Cast Piston",
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 7,
                            Description = "Protective cover for motorcycle engines made of titanium.",
                            ImageUrl = "https://i.ibb.co/1RXqkVy/Part-Engine-Cover.png",
                            IsAvailable = true,
                            Price = 99.99m,
                            StockQuantity = 4,
                            Title = "Engine Clutch Cover",
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 3,
                            Description = "Complete gasket set for top-end engine rebuilds and maintenance.",
                            ImageUrl = "https://i.ibb.co/Yj4MJ6r/Part-Top-End-Gasket.jpg",
                            IsAvailable = true,
                            Price = 89.99m,
                            StockQuantity = 31,
                            Title = "Top-End Gasket Set",
                            Type = 0
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 3,
                            Description = "Enhanced water pump cover for improved cooling efficiency.",
                            ImageUrl = "https://i.ibb.co/ZHQ36hf/Part-Water-Pump-Cover.jpg",
                            IsAvailable = true,
                            Price = 87.79m,
                            StockQuantity = 10,
                            Title = "Water Pump Cover",
                            Type = 0
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 12,
                            Description = "High-flow fuel injector for increased horsepower, throttle response and fuel efficiency.",
                            ImageUrl = "https://i.ibb.co/dmkcV30/Part-Fuel-Injector.jpg",
                            IsAvailable = true,
                            Price = 289.99m,
                            StockQuantity = 3,
                            Title = "8-Point Fuel Injector",
                            Type = 0
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 17,
                            Description = "A set of two high-quality intake valves that exceed OEM quality.",
                            ImageUrl = "https://i.ibb.co/fG9XLdn/Part-Intake-Valves.jpg",
                            IsAvailable = true,
                            Price = 139.29m,
                            StockQuantity = 7,
                            Title = "Intake Valves Set",
                            Type = 0
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 18,
                            Description = "Electric fuel pump for replacing the old one. Comes with all necessary components.",
                            ImageUrl = "https://i.ibb.co/LnW1Y4k/Part-Fuel-Pump.jpg",
                            IsAvailable = true,
                            Price = 149.99m,
                            StockQuantity = 12,
                            Title = "Fuel Pump",
                            Type = 0
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 16,
                            Description = "Premium air filter for improved air flow and engine performance.",
                            ImageUrl = "https://i.ibb.co/vqg672F/Part-Air-Filter.jpg",
                            IsAvailable = true,
                            Price = 24.49m,
                            StockQuantity = 27,
                            Title = "Air Filter",
                            Type = 1
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 6,
                            Description = "High-quality oil filter for efficient filtration and engine longevity.",
                            ImageUrl = "https://i.ibb.co/kG1KnVN/Part-Oil-Filter.jpg",
                            IsAvailable = true,
                            Price = 10.99m,
                            StockQuantity = 19,
                            Title = "Oil Filter",
                            Type = 1
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 16,
                            Description = "High-quality oil filter for efficient filtration and engine longevity.",
                            ImageUrl = "https://i.ibb.co/V2qj6c0/Part-Oil-Filter-Cap.jpg",
                            IsAvailable = true,
                            Price = 54.29m,
                            StockQuantity = 8,
                            Title = "Aluminum Oil Filter Cap",
                            Type = 1
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 16,
                            Description = "Custom shaped adaptor for each model that fits securely under the gas cap, creating a leak-proof seal.",
                            ImageUrl = "https://i.ibb.co/s1YdYwt/Part-Fuel-Filter-Tank.jpg",
                            IsAvailable = true,
                            Price = 50.99m,
                            StockQuantity = 5,
                            Title = "Fuel Filter (Gas Tank)",
                            Type = 1
                        },
                        new
                        {
                            Id = 13,
                            BrandId = 5,
                            Description = "Replacement brake pads offering reliable stopping performance.",
                            ImageUrl = "https://i.ibb.co/tc2m4jh/Part-Brake-Pads.jpg",
                            IsAvailable = true,
                            Price = 35.89m,
                            StockQuantity = 20,
                            Title = "Sintered Front Brake Pads",
                            Type = 3
                        },
                        new
                        {
                            Id = 14,
                            BrandId = 11,
                            Description = "Comfortable and durable lever, made out of aluminum for improved control and comfort.",
                            ImageUrl = "https://i.ibb.co/1RqcRGm/Part-Brake-Lever.jpg",
                            IsAvailable = true,
                            Price = 71.99m,
                            StockQuantity = 14,
                            Title = "Aluminum Brake Lever",
                            Type = 3
                        },
                        new
                        {
                            Id = 15,
                            BrandId = 11,
                            Description = "High-performance brake disc for superior stopping power.",
                            ImageUrl = "https://i.ibb.co/DG6HpM4/Part-Front-Brake-Disc.jpg",
                            IsAvailable = true,
                            Price = 89.99m,
                            StockQuantity = 1,
                            Title = "Front Brake Disc",
                            Type = 3
                        },
                        new
                        {
                            Id = 16,
                            BrandId = 11,
                            Description = "High-performance brake disc for superior stopping power.",
                            ImageUrl = "https://i.ibb.co/BNPMF26/Part-Rear-Brake-Disc.jpg",
                            IsAvailable = true,
                            Price = 77.29m,
                            StockQuantity = 7,
                            Title = "Rear Brake Disc",
                            Type = 3
                        },
                        new
                        {
                            Id = 17,
                            BrandId = 14,
                            Description = "Precision-engineered shock absorber for smooth ride experience.",
                            ImageUrl = "https://i.ibb.co/LRQphRW/Part-Shock-Absorber.jpg",
                            IsAvailable = true,
                            Price = 799.19m,
                            StockQuantity = 3,
                            Title = "Shock Absorber",
                            Type = 4
                        },
                        new
                        {
                            Id = 18,
                            BrandId = 14,
                            Description = "Upgraded front fork springs for improved suspension response and handling. Set of two.",
                            ImageUrl = "https://i.ibb.co/yyZK9tT/Part-Fork-Springs.jpg",
                            IsAvailable = true,
                            Price = 429.99m,
                            StockQuantity = 5,
                            Title = "Front Fork Springs",
                            Type = 4
                        },
                        new
                        {
                            Id = 19,
                            BrandId = 8,
                            Description = "Seal kit for motorcycle forks to prevent leaks and maintain suspension performance.",
                            ImageUrl = "https://i.ibb.co/7jy1dvG/Part-Fork-Seals.jpg",
                            IsAvailable = true,
                            Price = 44.99m,
                            StockQuantity = 18,
                            Title = "Fork Seal Kit",
                            Type = 4
                        },
                        new
                        {
                            Id = 20,
                            BrandId = 8,
                            Description = "The latest KYB technology is used to develop this shock, used by Yamaha Factory Racing drivers.",
                            ImageUrl = "https://i.ibb.co/LtFwYZ3/Part-KYB-Shock.jpg",
                            IsAvailable = true,
                            Price = 1404.49m,
                            StockQuantity = 2,
                            Title = "HI-C Shock Absorber",
                            Type = 4
                        },
                        new
                        {
                            Id = 21,
                            BrandId = 14,
                            Description = "Designed as a drop-in replacement to upgrade OEM ball-type bearings to taper bearings.",
                            ImageUrl = "https://i.ibb.co/VCWrYtY/Part-Steering-Bearings.jpg",
                            IsAvailable = true,
                            Price = 125.50m,
                            StockQuantity = 6,
                            Title = "Steering Stem Bearing Kit",
                            Type = 4
                        },
                        new
                        {
                            Id = 22,
                            BrandId = 4,
                            Description = "Durable motorcycle chain for smooth power transfer.",
                            ImageUrl = "https://i.ibb.co/9tCHFWY/Part-Chain.jpg",
                            IsAvailable = true,
                            Price = 119.99m,
                            StockQuantity = 10,
                            Title = "114-Links Chain",
                            Type = 2
                        },
                        new
                        {
                            Id = 23,
                            BrandId = 4,
                            Description = "Durable motorcycle chain for smooth power transfer.",
                            ImageUrl = "https://i.ibb.co/9tCHFWY/Part-Chain.jpg",
                            IsAvailable = true,
                            Price = 129.99m,
                            StockQuantity = 7,
                            Title = "120-Links Chain",
                            Type = 2
                        },
                        new
                        {
                            Id = 24,
                            BrandId = 4,
                            Description = "Quality rear sprocked made out of aluminum.",
                            ImageUrl = "https://i.ibb.co/xGz2dVn/Part-Rear-Sprocket.png",
                            IsAvailable = true,
                            Price = 89.79m,
                            StockQuantity = 4,
                            Title = "52-Teeth Rear Sprocket",
                            Type = 2
                        },
                        new
                        {
                            Id = 25,
                            BrandId = 4,
                            Description = "Standart-sized front sprocked with self-cleaning properties.",
                            ImageUrl = "https://i.ibb.co/9pKtqn6/Part-Front-Sprocket.jpg",
                            IsAvailable = true,
                            Price = 24.19m,
                            StockQuantity = 13,
                            Title = "13-Teeth Front Sprocket",
                            Type = 2
                        },
                        new
                        {
                            Id = 26,
                            BrandId = 7,
                            Description = "Complete clutch kit for enhanced performance and durability.",
                            ImageUrl = "https://i.ibb.co/y0KwgV5/Part-Clutch-Kit.jpg",
                            IsAvailable = true,
                            Price = 2149.99m,
                            StockQuantity = 3,
                            Title = "Complete Clutch Kit",
                            Type = 2
                        },
                        new
                        {
                            Id = 27,
                            BrandId = 17,
                            Description = "Clutch plate kit with friction plates and steel plates for smooth engagement.",
                            ImageUrl = "https://i.ibb.co/9qGztRG/Part-Clutch-Plates.jpg",
                            IsAvailable = true,
                            Price = 339.69m,
                            StockQuantity = 8,
                            Title = "Clutch Plate Kit",
                            Type = 2
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.ProductBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductBrands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Alpinestars is an Italian motorsports and action sports safety equipment manufacturer based in Asolo, Italy.",
                            ImageUrl = "https://i.ibb.co/pRBhwQL/Brand-Alpinestars.jpg",
                            Name = "Alpinestars"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A leader in lubrication technology, Bel-Ray has engineered products to protect, while delivering superior business value for application in automotive, motorcycle, powersports, steel, textile and other industries.",
                            ImageUrl = "https://i.ibb.co/QJVYPT5/Brand-Belray.png",
                            Name = "BEL-RAY"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Boyesen has captured the attention of Racing teams, leveraging their engineering and manufacturing mastery to create water pump covers and impellers, ignition and clutch covers.",
                            ImageUrl = "https://i.ibb.co/d6VvnbP/Brand-Boyesen.png",
                            Name = "Boyesen"
                        },
                        new
                        {
                            Id = 4,
                            Description = "At D.I.D, our passion for motorcycles and commitment to excellence drives us to deliver the finest motorcycle chains in the industry.",
                            ImageUrl = "https://i.ibb.co/FHZw9Kn/Brand-DID.jpg",
                            Name = "D.I.D"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Galfer USA is the leading manufacturer of performance braking systems and accessories for motorcycle enthusiasts and racers alike.",
                            ImageUrl = "https://i.ibb.co/dcgHQTq/Brand-Galfer.jpg",
                            Name = "Galfer"
                        },
                        new
                        {
                            Id = 6,
                            Description = "HifloFiltro specializes in the production of all types of filters for the motorcycle with the goal of harnessing maximum racing performance.",
                            ImageUrl = "https://i.ibb.co/JHRM0wR/Brand-Hiflofiltro.png",
                            Name = "HifloFiltro"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Hinson clutch components is the choice of most major factory teams and riders and has proven itself to be the best quality for many years.",
                            ImageUrl = "https://i.ibb.co/6P8X0rw/Brand-Hinson.png",
                            Name = "Hinson"
                        },
                        new
                        {
                            Id = 8,
                            Description = "All KYB shock absorbers are designed to the highest standards and are manufactured in the same facilities that build shocks for new vehicle manufacturers.",
                            ImageUrl = "https://i.ibb.co/rb39ScR/Brand-KYB.jpg",
                            Name = "KYB"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Motorex is a Swiss family-owned company specializing in the development, production and marketing of lubricants, metalworking fluids, technical cleaning and care products.",
                            ImageUrl = "https://i.ibb.co/BTH07X5/Brand-Motorex.png",
                            Name = "Motorex"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Founded in 1853, Motul is a French company with an international footprint specialized in the formulation, production, and distribution of high-performance lubricants for engines.",
                            ImageUrl = "https://i.ibb.co/GCr2RWB/Brand-Motul.png",
                            Name = "MOTUL"
                        },
                        new
                        {
                            Id = 11,
                            Description = "At Moto-Master we are passionate about motorcycles and it is our mission to improve the riding experience of our customers by providing them with the best brake setup possible.",
                            ImageUrl = "https://i.ibb.co/wYHcP3V/Brand-Moto-Master.png",
                            Name = "Moto-Master"
                        },
                        new
                        {
                            Id = 12,
                            Description = "With over 80 years of automotive expertise, we are driven by extreme dedication to performance and quality. Our people push the boundaries of innovation to bring the latest technologies to market.",
                            ImageUrl = "https://i.ibb.co/LPmhfCZ/Brand-NGK.jpg",
                            Name = "NGK"
                        },
                        new
                        {
                            Id = 13,
                            Description = "O’NEAL (est. 1970) is a global leader in protective apparel and accessories.  For more than half a century O’NEAL has been designing and developing helmets, jerseys, pants, protectors, gloves, boots and much more.",
                            ImageUrl = "https://i.ibb.co/mcTTcvw/Brand-Oneal.png",
                            Name = "O'NEAL"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Showa is a brand of high-performance automotive, motorcycle and outboard suspension systems of Hitachi Astemo, based in Gyoda, Saitama in Japan.",
                            ImageUrl = "https://i.ibb.co/Hq2m8dJ/Brand-Showa.png",
                            Name = "Showa"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Check out our latest Motocross outfits, backed by the top riders in the sport.",
                            ImageUrl = "https://i.ibb.co/brNJbzM/Brand-Thor.jpg",
                            Name = "THOR"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Twin Air produces air filters and oil filters as well as performance upgrades for all types of motorcycles, ATVs, Karts and RC products.",
                            ImageUrl = "https://i.ibb.co/SVDTgZW/Brand-Twin-Air.png",
                            Name = "Twin Air"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Vertex is considered the premier brand of OEM replacement pistons and is the OEM supplier to KTM and numerous European motorcycle and go-kart manufacturers.",
                            ImageUrl = "https://i.ibb.co/ggg74HP/Brand-Vertex.gif",
                            Name = "Vertex"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Wiseco was born 80 years ago from a passion for the performance and racing lifestyle and evolved from garage-made pistons to an industry leader in aftermarket performance.",
                            ImageUrl = "https://i.ibb.co/c2BQ2n7/Brand-Wiseco.gif",
                            Name = "Wiseco"
                        },
                        new
                        {
                            Id = 19,
                            Description = "YAMALUBE is an engine oil developed in-house by Yamaha specifically for motorcycles.",
                            ImageUrl = "https://i.ibb.co/8403f2t/Brand-Yamalube.jpg",
                            Name = "YAMALUBE"
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Properties.GearSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("GearsSpecifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TitleId = 1,
                            Value = "Polyester Mesh"
                        },
                        new
                        {
                            Id = 2,
                            TitleId = 1,
                            Value = "Cotton"
                        },
                        new
                        {
                            Id = 3,
                            TitleId = 1,
                            Value = "Denim"
                        },
                        new
                        {
                            Id = 4,
                            TitleId = 3,
                            Value = "Red"
                        },
                        new
                        {
                            Id = 5,
                            TitleId = 3,
                            Value = "Blue"
                        },
                        new
                        {
                            Id = 6,
                            TitleId = 3,
                            Value = "Green"
                        },
                        new
                        {
                            Id = 7,
                            TitleId = 3,
                            Value = "Orange"
                        },
                        new
                        {
                            Id = 8,
                            TitleId = 3,
                            Value = "White"
                        },
                        new
                        {
                            Id = 9,
                            TitleId = 3,
                            Value = "Dark Gray"
                        },
                        new
                        {
                            Id = 10,
                            TitleId = 3,
                            Value = "Black"
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Properties.OilSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("OilsSpecifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TitleId = 7,
                            Value = "5W"
                        },
                        new
                        {
                            Id = 2,
                            TitleId = 7,
                            Value = "10W40"
                        },
                        new
                        {
                            Id = 3,
                            TitleId = 7,
                            Value = "15W60"
                        },
                        new
                        {
                            Id = 4,
                            TitleId = 3,
                            Value = "Red"
                        },
                        new
                        {
                            Id = 5,
                            TitleId = 3,
                            Value = "Blue"
                        },
                        new
                        {
                            Id = 6,
                            TitleId = 3,
                            Value = "Green"
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Properties.PartSpecification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("TitleId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TitleId");

                    b.ToTable("PartsSpecifications");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TitleId = 1,
                            Value = "Aluminum"
                        },
                        new
                        {
                            Id = 2,
                            TitleId = 1,
                            Value = "Titanium"
                        },
                        new
                        {
                            Id = 3,
                            TitleId = 1,
                            Value = "Foam"
                        },
                        new
                        {
                            Id = 4,
                            TitleId = 1,
                            Value = "Ferodo"
                        },
                        new
                        {
                            Id = 5,
                            TitleId = 1,
                            Value = "Impregnated Cork"
                        },
                        new
                        {
                            Id = 6,
                            TitleId = 1,
                            Value = "Steel"
                        },
                        new
                        {
                            Id = 7,
                            TitleId = 2,
                            Value = "Cast"
                        },
                        new
                        {
                            Id = 8,
                            TitleId = 2,
                            Value = "Forged"
                        },
                        new
                        {
                            Id = 9,
                            TitleId = 3,
                            Value = "Red"
                        },
                        new
                        {
                            Id = 10,
                            TitleId = 3,
                            Value = "Blue"
                        },
                        new
                        {
                            Id = 11,
                            TitleId = 3,
                            Value = "Green"
                        },
                        new
                        {
                            Id = 12,
                            TitleId = 3,
                            Value = "Orange"
                        },
                        new
                        {
                            Id = 13,
                            TitleId = 3,
                            Value = "White"
                        },
                        new
                        {
                            Id = 14,
                            TitleId = 3,
                            Value = "Dark Gray"
                        },
                        new
                        {
                            Id = 15,
                            TitleId = 3,
                            Value = "Black"
                        },
                        new
                        {
                            Id = 16,
                            TitleId = 4,
                            Value = "74.96mm"
                        },
                        new
                        {
                            Id = 17,
                            TitleId = 4,
                            Value = "74.98mm"
                        },
                        new
                        {
                            Id = 18,
                            TitleId = 4,
                            Value = "75.00mm"
                        },
                        new
                        {
                            Id = 19,
                            TitleId = 4,
                            Value = "88.96mm"
                        },
                        new
                        {
                            Id = 20,
                            TitleId = 4,
                            Value = "88.98mm"
                        },
                        new
                        {
                            Id = 21,
                            TitleId = 4,
                            Value = "89.00mm"
                        },
                        new
                        {
                            Id = 22,
                            TitleId = 5,
                            Value = "4.2kg/mm"
                        },
                        new
                        {
                            Id = 23,
                            TitleId = 5,
                            Value = "4.6kg/mm"
                        },
                        new
                        {
                            Id = 24,
                            TitleId = 5,
                            Value = "5.0kg/mm"
                        },
                        new
                        {
                            Id = 25,
                            TitleId = 4,
                            Value = "220mm"
                        },
                        new
                        {
                            Id = 26,
                            TitleId = 4,
                            Value = "270mm"
                        },
                        new
                        {
                            Id = 27,
                            TitleId = 6,
                            Value = "48mm"
                        },
                        new
                        {
                            Id = 28,
                            TitleId = 6,
                            Value = "50mm"
                        });
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Properties.SpecificationTitles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpecificationTitles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Material"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Manufacture Method"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Color"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Diameter"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Spring Rate"
                        },
                        new
                        {
                            Id = 6,
                            Title = "Seal Fitment"
                        },
                        new
                        {
                            Id = 7,
                            Title = "Viscosity"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.GearProperty", b =>
                {
                    b.HasOne("DirtX.Infrastructure.Data.Models.Products.Gear", "Gear")
                        .WithMany("GearProperties")
                        .HasForeignKey("GearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DirtX.Infrastructure.Data.Models.Products.Properties.GearSpecification", "Specification")
                        .WithMany("GearProperties")
                        .HasForeignKey("SpecificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gear");

                    b.Navigation("Specification");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.MotorcyclePart", b =>
                {
                    b.HasOne("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Motorcycle", "Motorcycle")
                        .WithMany("MotorcycleParts")
                        .HasForeignKey("MotorcycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DirtX.Infrastructure.Data.Models.Products.Part", "Part")
                        .WithMany("MotorcycleParts")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Motorcycle");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Motorcycles.UsedMotorcycle", b =>
                {
                    b.HasOne("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Displacement", "Displacement")
                        .WithMany()
                        .HasForeignKey("DisplacementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Make", "Make")
                        .WithMany()
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Year", "Year")
                        .WithMany()
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Displacement");

                    b.Navigation("Make");

                    b.Navigation("Model");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Motorcycle", b =>
                {
                    b.HasOne("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Displacement", "Displacement")
                        .WithMany()
                        .HasForeignKey("DisplacementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Make", "Make")
                        .WithMany()
                        .HasForeignKey("MakeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Year", "Year")
                        .WithMany()
                        .HasForeignKey("YearId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Displacement");

                    b.Navigation("Make");

                    b.Navigation("Model");

                    b.Navigation("Year");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.OilProperty", b =>
                {
                    b.HasOne("DirtX.Infrastructure.Data.Models.Products.Oil", "Oil")
                        .WithMany("OilProperties")
                        .HasForeignKey("OilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DirtX.Infrastructure.Data.Models.Products.Properties.OilSpecification", "Specification")
                        .WithMany("OilProperties")
                        .HasForeignKey("SpecificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oil");

                    b.Navigation("Specification");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.PartProperty", b =>
                {
                    b.HasOne("DirtX.Infrastructure.Data.Models.Products.Part", "Part")
                        .WithMany("PartProperties")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DirtX.Infrastructure.Data.Models.Products.Properties.PartSpecification", "Specification")
                        .WithMany("PartProperties")
                        .HasForeignKey("SpecificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Part");

                    b.Navigation("Specification");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Gear", b =>
                {
                    b.HasOne("DirtX.Infrastructure.Data.Models.Products.ProductBrand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Oil", b =>
                {
                    b.HasOne("DirtX.Infrastructure.Data.Models.Products.ProductBrand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Part", b =>
                {
                    b.HasOne("DirtX.Infrastructure.Data.Models.Products.ProductBrand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Properties.GearSpecification", b =>
                {
                    b.HasOne("DirtX.Infrastructure.Data.Models.Products.Properties.SpecificationTitles", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Title");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Properties.OilSpecification", b =>
                {
                    b.HasOne("DirtX.Infrastructure.Data.Models.Products.Properties.SpecificationTitles", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Title");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Properties.PartSpecification", b =>
                {
                    b.HasOne("DirtX.Infrastructure.Data.Models.Products.Properties.SpecificationTitles", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Title");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.MotorcycleSpecs.Motorcycle", b =>
                {
                    b.Navigation("MotorcycleParts");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Gear", b =>
                {
                    b.Navigation("GearProperties");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Oil", b =>
                {
                    b.Navigation("OilProperties");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Part", b =>
                {
                    b.Navigation("MotorcycleParts");

                    b.Navigation("PartProperties");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Properties.GearSpecification", b =>
                {
                    b.Navigation("GearProperties");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Properties.OilSpecification", b =>
                {
                    b.Navigation("OilProperties");
                });

            modelBuilder.Entity("DirtX.Infrastructure.Data.Models.Products.Properties.PartSpecification", b =>
                {
                    b.Navigation("PartProperties");
                });
#pragma warning restore 612, 618
        }
    }
}
